-- Function to find and return a nil instance by name and class
function getNil(name, class)
    for _, v in next, getnilinstances() do
        if v.ClassName == class and v.Name == name then
            return v
        end
    end
end

-- Function to send trade request to a specified user
function sendTradeRequest(username)
    local args = {
        [1] = username
    }
    game:GetService("Players").LocalPlayer.Character.CharacterHandler.Remotes.Trade:InvokeServer(unpack(args))
end

-- Function to add an item to the trade
function addItemToTrade(itemName, slotNumber)
    local args = {
        [1] = "AddItem",
        [2] = itemName,
        [3] = slotNumber
    }
    game:GetService("Players").LocalPlayer.Character.CharacterHandler.Remotes.TradeEvent:FireServer(unpack(args))
end

-- Function to accept the trade request
function acceptTradeRequest()
    local args = {
        [1] = "Accepted"
    }
    game:GetService("Players").LocalPlayer.Character.CharacterHandler.Remotes.TradeEvent:FireServer(unpack(args))
end

-- Function to add the item to all slots (1 to 4)
function addItemToAllSlots(itemName)
    for slotNumber = 1, 4 do
        addItemToTrade(itemName, slotNumber)
    end
end


-- Execute the trading sequence
sendTradeRequest(targetUsername)
addItemToAllSlots(itemName)
acceptTradeRequest()
